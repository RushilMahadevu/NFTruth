apiVersion: apps/v1
kind: Deployment
metadata:
  name: nftruth-api
  namespace: nftruth
  labels:
    app: nftruth-api
spec:
  replicas: 1  # Single replica for limited resources
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: nftruth-api
  template:
    metadata:
      labels:
        app: nftruth-api
    spec:
      containers:
      - name: nftruth-api
        image: nftruth-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: nftruth-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: nftruth-config
              key: LOG_LEVEL
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: nftruth-config
              key: PORT
        - name: HOST
          valueFrom:
            configMapKeyRef:
              name: nftruth-config
              key: HOST
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "150m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: nftruth-storage
          mountPath: /app/logs
          subPath: logs
        - name: nftruth-storage
          mountPath: /app/model_outputs
          subPath: model_outputs
      volumes:
      - name: nftruth-storage
        persistentVolumeClaim:
          claimName: nftruth-pvc
      restartPolicy: Always
